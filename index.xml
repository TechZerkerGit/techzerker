<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>TechZerker</title>
        <link>https://techzerker.com/</link>
        <description>A Tech Professional With Occasional Sanity</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 15 Jan 2022 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://techzerker.com/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>202007262035</title>
    <link>https://techzerker.com/202007262035-zettelkasten-method-imhoff/</link>
    <pubDate>Sat, 15 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/202007262035-zettelkasten-method-imhoff/</guid>
    <description><![CDATA[<h1 id="zettelkasten-method-imhoff">Zettelkasten Method Imhoff</h1>
<h2 id="202007262035">202007262035</h2>
<p>Stefan started Zettelkasten in 2019, and in his case found the Mac/iOS <a href="" rel="">Devonthink</a> software fit his design best.</p>
<p>Stefan does not do regular #Tags, as his focus on Devonthink as the software, it does the equivalent of tags, but apparently smarter.</p>
<p>Stefans version of workflow into his Zettelkasten is to have a handful of <em>Inboxes</em> to gather rough notes, things to reference and ideas. He then generally processes the inbox once a day into useful notes.</p>
<p>Stefan had excellent rules listed for selecting privacy focused software.
<a href="202007262114-selecting-software-privacy" rel="">202007262114-Selecting-Software-Privacy</a></p>
<h3 id="links">Links</h3>
<p><a href="Zettelkasten-Method.md" rel="">Zettelkasten-Method</a></p>
<h3 id="references">References</h3>
<p><a href="https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125" target="_blank" rel="noopener noreffer">Zettelkasten — How One German Scholar Was So Freakishly Productive</a></p>
<p><a href="https://omxi.se/2015-06-21-living-with-a-zettelkasten.html" target="_blank" rel="noopener noreffer">Living with a Zettelkasten</a></p>
<p>#Zettel #Notes #Zettelkasten</p>
<p>|</p>
]]></description>
</item><item>
    <title>202007262114</title>
    <link>https://techzerker.com/202007262114-selecting-software-privacy/</link>
    <pubDate>Fri, 14 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/202007262114-selecting-software-privacy/</guid>
    <description><![CDATA[<h1 id="202007262114-selecting-software-for-privacy">202007262114 Selecting Software for Privacy</h1>
<p>These rules are one good guideline that came out of an article on Zettelkasten, but apply in many areas. This is a rare direct copy, as it can&rsquo;t really be rephrased:</p>
<ul>
<li>Never use a tool or service which does not allow exporting my content easily.</li>
<li>Never store valuable information only on an external server which might disappear or be inaccessible.</li>
<li>Never use a proprietary format that is depending on a specific company or tool or is hard or impossible to convert into another format.</li>
<li>If possible don’t use a service or software that doesn’t support encrypting my data.</li>
<li>If possible don’t use a service or software that has a monthly fee. Monthly fees make it easy for developers to not deliver good software while the user is not being able to stop paying without losing access to the software.</li>
</ul>
<h2 id="reference">Reference</h2>
<p><a href="https://www.stefanimhoff.de/zettelkasten-note-taking-devonthink/" target="_blank" rel="noopener noreffer">Zettelkasten Method by Stefan Imhoff</a></p>
]]></description>
</item><item>
    <title>Using LTE Tablet as a Phone</title>
    <link>https://techzerker.com/2021-12-29-tabletphone/</link>
    <pubDate>Wed, 29 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/2021-12-29-tabletphone/</guid>
    <description><![CDATA[<p>After reading <a href="https://www.anrdoezrs.net/click-100549456-13710612?url=https%3A%2F%2Fwww.chapters.indigo.ca%2Fen-ca%2Fbooks%2Fproduct%2F9780525536512-item.html&amp;cjsku=978052553651" target="_blank" rel="noopener noreffer">Digital Minimalism</a> several times when it was released, I looked for ways to implement the ideas presented. They ranged from minor changes to the existing smartphone all the way to the realm of no mobile device. The first serious solution I settled on was using an LTE Tablet in place of the smartphone, circa 2019.</p>
<h2 id="the-setup">The Setup</h2>
<ul>
<li>ZTE Grand X View 3 8” Tablet (LTE)</li>
<li>Ooma VOIP Service w/Premium Plan</li>
<li>Virgin Mobile Data Plan</li>
</ul>
<h3 id="zte-tablet">ZTE Tablet</h3>
<p>The ZTE Grand X View 3 was selected, as I was targeting a budget device. I wasn’t ready to commit to the cost of an iPad Mini, and was focusing on smaller tablets to remain semi-portable. In that range, this ZTE Tablet had the highest resolution screen and more memory than most other LTE 7-8” Tablets that supported Canadian carriers.</p>
<p><em>Cost: $6/mo - Two Year Contract</em></p>
<h3 id="ooma-voip-service">Ooma VOIP Service</h3>
<p>I shopped around for a few VOiP providers before selecting Ooma. One of my key criteria was porting my existing number. The only provider that came back with that option was Ooma. To seal that deal, Ooma offered mobile apps that would allow all calling features with their premier plan.</p>
<p><em>Cost: $10/mo - Paid Yearly</em></p>
<h3 id="virgin-mobile-data-plan">Virgin Mobile Data Plan</h3>
<p>The selection of the carrier came down to the device selection, as I wasn’t interested in buying up front. In this case, the core carriers all had more outdated entry level small Android tablets, for the same price that Virgin had the ZTE. In addition, Virgin had a decent offer of 4 GB data for $15/mo. At the time of purchase, other carriers were all running <em>scaling</em> tablet plans that started at $5 for 100mb, and quickly scaled to $20 for 2 GB and up.</p>
<p><em>Cost: $15/mo</em></p>
<h3 id="total-solution-cost">Total Solution Cost</h3>
<p>These components together formed the plan, and would double up as a budget savings vs the $75-100/mo standard smartphone plan.</p>
<p><em>Total Cost: <strong>$31.00/mo</strong></em></p>
<h2 id="why-use-a-tablet-as-a-phone">Why Use a Tablet as a Phone?</h2>
<p>The thought process to this solution was to maintain the benefits of the smartphone, but introduce a barrier to the <em>always in your pocket</em> easy access.</p>
<p>The concept being that I could have access to apps on the go, and features like navigation. I would be able to get calls while travelling and be in contact, with limits. The goal was that while out and about daily, this tablet could remain in the vehicle console, in a laptop bag and sometimes just stay home on the coffee table. It would mean having mobile capability, with enough impediment to minimize habitual time-wasting usage.</p>
<h2 id="how-did-it-work">How Did It Work?</h2>
<p>After about eight months with this deployment, I would rank it as a success. My mobile device usage went way down, but I could still be reached the vast majority of the time. Coming from the coming-of-age era of home phone with answering machine, I was more reachable than that, with limitations.</p>
<p>Did it have complications? Absolutely! Phone call usage meant always having earbuds with a mic available, otherwise I would have to obnoxiously use speakerphone in public. I had a handful of times in stores that I wanted a quick picture, or wanted to text my spouse a question, but the tablet was in the vehicle. However, none of these were serious problems. Battery life was excellent, the LTE speeds were as fast as any device, and the larger screen was a plus.</p>
<p>The most noticeable drawback was being VoIP, it has no support for SMS. This had little impact for me, as I operate more on Telegram. A few financial services have given issue due to only supporting SMS for two factor, instead of my preferred TOTP options, so those took some hoops to jump through.</p>
<p>Regarding call quality itself, Ooma does the job as well as most home phone VoIP services. On decent LTE, I could be heard, with the exception of call centers, which either struggled to hear me or had a very long lag time. But in all honesty, most of those call centers have had issues with my work Bell service when it is on <em>wifi calling mode</em>, so I’m not knocking it against Ooma.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I believe using a VOIP service on a cellular tablet as a viable option. It does have its drawbacks, but then, that was the point being inspired by digital minimalism ideals. The cost savings vs a full cellular plan (in Canada at least) were obvious, and I still had access often enough to apps I might need on the road.</p>
<p>I still partially have the service, both the tablet and the Ooma service are active, but I also carry an iPhone provided by my workplace. As such, the Ooma app for my personal number is installed and works great on both devices. It’s an option worth considering in my books!</p>]]></description>
</item><item>
    <title>Personal Blogs and Community Support</title>
    <link>https://techzerker.com/2021-10-21-blog-community/</link>
    <pubDate>Thu, 21 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/2021-10-21-blog-community/</guid>
    <description><![CDATA[<p>My love for small, personal blogs and writing that is not SEO or advertising focused has always been strong, mostly calling back to my 90&rsquo;s internet roots. From the era before the big central platforms like Facebook, when we all had independant sites, free GeoCities blogs, and the like. In that world, which still exists today, albeit smaller, easy quick sharing and <em>likes</em> did not exist. This meant that in most cases, as far as any specific blog author knew, you were writing into a void that no one was reading, which can still be the case.</p>
<p>The inspiration for this little commentary was the recent events as I started returning to some writing (and coding) plans. This site is built with the <a href="https://gohugo.io/" target="_blank" rel="noopener noreffer">Hugo</a> framework, and hosted via <strong>GitHub Pages</strong>. When I returned to start writing a bit of a history and way forward artcile on trying to get back into Coding, and tackling a #100DaysofCode challenge, I found my <em>GitHub Actions</em> tasks that publish these posts were failing. Hours of searching and mucking about, and the action workflow that had previously worked just kept failing, and every element of documentation I could find for the most common workflow scripts, pointed to the same failing solutions. Because these most common solutions relied on importing other components/scripts, I was not getting decent or useful error logs to explain why the failure was occuring. I know there are methods to further pull those workflows and components apart to troubleshoot, but I wanted to keep searching, and that&rsquo;s where another personal blog, more or less shouting into the void of the internet, solved my problem.</p>
<p>In my searching, results came up pointing to a personal blog <a href="https://matt-harrison.com/" target="_blank" rel="noopener noreffer">Matt Harrison</a>, a fellow advertising free, Hugo built and GitHub Pages hosted blog. Like myself, the writing is sometimes sporadic because it&rsquo;s not designed as a source of income directly, and it&rsquo;s not built to encourage agressive likes/favorites/shares. The article itself was <a href="https://matt-harrison.com/posts/github-actions-hugo/" target="_blank" rel="noopener noreffer">Automating this Hugo Blog with GitHub Actions</a>. Matt gave a well written summary of GitHub actions, and then provided his own actions workflow script. The main script was followed by a nice breakout summary of the key stages of the script and what they were doing, which solidified by understanding of the process. Because it did not rely on other pre-build actions, beyond the standard git checkout action, it was easy to understand what was going on, and it solved my own problems perfectly!</p>
<p>For my use case, the only change I had to select a different Hugo version required for my theme, as well as update the curl download to pull Hugo Extended, also required for my theme:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    steps:
      - name: Install Hugo
        env:
          HUGO_VERSION: 0.86.1
        run: |
          mkdir ~/hugo
          cd ~/hugo
          curl -L &#34;https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz&#34; --output hugo.tar.gz
          tar -xvzf hugo.tar.gz
          sudo mv hugo /usr/local/bin
</code></pre></td></tr></table>
</div>
</div><p>Once I realized this solved my problems, and I could get back to writingi, I was excited. I reached out to Matt to give a quick Thank You for his posted solution, and recieved a pleasant response back equally agreeing that often this type of writing feels like shouting into the void. So hey, if you&rsquo;re reading a small site like this, especially one not pushing advertising and tracking, and you find it useful, reach out to the author and let them know it helped, it&rsquo;s always appreciated.</p>
<p>If you are looking for more reading, I maintain my own <a href="https://techzerker.com/blogroll/" target="_blank" rel="noopener noreffer">Blogroll listing</a> here on the site, mostly generated from my MiniFlux RSS Feed. Some of the entries in other categories are larger sites with tracking and advertising, but first on the list is personal Blogs that I like to follow, and I occasionaly update the list when I find new entries. In the next few days, I&rsquo;ll get onto that planned article (now that everything is working) on my development history/education, and my plans for the future.</p>]]></description>
</item><item>
    <title>Toxicity in Linux Community (Link)</title>
    <link>https://techzerker.com/2021-02-11-toxic-linux/</link>
    <pubDate>Thu, 11 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/2021-02-11-toxic-linux/</guid>
    <description><![CDATA[<p>The <a href="https://medium.com/linuxforeveryone" target="_blank" rel="noopener noreffer"><em>Linux For Everyone</em></a> channel, founded by <a href="https://layer8.space/@killyourfm" target="_blank" rel="noopener noreffer">Jason Evangelho</a> today posted an excellent commentary, written by <a href="https://schykle.medium.com" target="_blank" rel="noopener noreffer">Alan Diggs</a> on the recurring challenges of the <a href="https://medium.com/linuxforeveryone/windows-is-sh-t-linux-users-and-the-technical-superiority-problem-196a597aa860" target="_blank" rel="noopener noreffer">toxicity in the Linux community</a>.</p>
<p>While there are some amazing and supportive groups throughout the Linux community, it is easy to agree with this commentary that the toxicity is a scar that consistently hurts the overall image of Linux and Open Source.</p>
<p>Working in enterprise IT, I personally know a selection of working IT folks who at my encouragement have <em>tried</em> Linux, and if they couldn&rsquo;t reach me, gone to a forum for questions, and then texted me <em>quitting Linux</em> because of how agressivly they were berated.</p>
<p>My core approach with Linux and encouraging adoption has been to talk about my own system and what works (and what does not) and show it off a little. If anyone reaches out and shows some interest, I will gadly answer what questions I can, understand their needs, and attempt to help and steer them in the right direction. However, the core philosphy is:</p>
<blockquote>
<p><em>Use what works for you. Period.</em></p>
</blockquote>
<p>If your Windows 10 system is getting the job (or game) done for you, and anything the community has shown in Linux (or BSD) has not grabbed your attention, that&rsquo;s fine, live and let live. If your interested in the systems the positive users in the community talk about and demonstrate, reach out with questions. If you&rsquo;ve tried before and hit a <em>&ldquo;Wall of Toxicity&rdquo;</em>, then here are a few great places to join and ask questions where we&rsquo;ll be friendly and helpful, regardless of your experience level:</p>
<p><a href="https://fosstodon.org" target="_blank" rel="noopener noreffer"><strong>Fosstodon</strong></a> (Mastodon Instance)</p>
<p><a href="https://t.me/linux4everyone" target="_blank" rel="noopener noreffer"><strong>Telegram: Linux For Everyone</strong></a></p>]]></description>
</item><item>
    <title>RSS: Controlling Your Feed (Link)</title>
    <link>https://techzerker.com/2020-12-08-rss-in-control/</link>
    <pubDate>Tue, 08 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/2020-12-08-rss-in-control/</guid>
    <description><![CDATA[<p>This article is a concise summary on RSS, and why it is a great way to syndicate content. It also hits the nail on the head for why it&rsquo;s being &ldquo;killed&rdquo; (marked as dead) by the content providers most are familiar with. (Twitter, Facebook, etc.) In short, with RSS, everything is chronological from when it was published, no algorithims deciding what you should read. Generally, when a site I have followed has removed RSS, I don&rsquo;t intentionally stop reading it (aka: I&rsquo;m not boycotting it), it mostly just falls off my radar, as there are very few sites I directly visit on a regular basis.</p>
<p>I used RSS via Google Reader heavily when it was popular, that being pre or early Facebook days. When it was shutdown, I moved onto Feedly, before finally rolling my own Self-Hosted <a href="MiniFlux.app" rel="">MiniFlux RSS</a> reader instance. Similar to Ibrahim, my site built with Hugo has RSS available and encouraged.</p>
<p>Article: <a href="https://idiallo.com/blog/rss-is-dead-please-subscribe?src=feed" target="_blank" rel="noopener noreffer">With RSS, You are in Control</a></p>
]]></description>
</item><item>
    <title>PaperSpace and Future Hyper-Converged Computing (Link)</title>
    <link>https://techzerker.com/2020-06-08-paperspace/</link>
    <pubDate>Mon, 08 Jun 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/2020-06-08-paperspace/</guid>
    <description><![CDATA[<p>Through an old article in my RSS, I came across this very long twitter post. I found it worth sharing as it expands one of the directions tech is moving in, rapidly. Will we all welcome it? Will it blend well with FOSS? <strong>Will it run EMACS or VIM?!?</strong> &hellip;</p>
<p></p>
<p><a href="https://twitter.com/nrose/status/1210698393355460608" target="_blank" rel="noopener noreffer">Source Twitter Post</a></p>
<p><em>Copied in full below for easier reading</em></p>
<hr>
<blockquote>
<p>Paperspace and Rollapp have my head spinning. It’s so clear this is the future and so clear hardly anyone sees it.</p>
<p>Enterprise has an emerging model called Hyper-Converged Infrastructure (HCI) which is basically: the compute, the storage, the display, the delivery, and even the software don’t exist until you need them.</p>
<p>What that means is: given a huge data center, you can choose from whatever resources are available at the moment and run a streaming software experience to the end user by connecting them all on-the-fly.</p>
<p>So a processor in Denver and storage in Albuquerque can simulate a single app experience in Sheboygan. The hypervisor makes sure it’s all seamless by containerizing everything.</p>
<p>So it’s on-the-fly software legos. Currently, software expecting to run on a desktop is virtualized and runs in this world without knowing it.</p>
<p>The next step is, now we can write software than anticipates this environment.</p>
<p>When you think of Notion or Airtable, they are basically interfaces to a database. Data sits in blocks (chunks of markdown and JSON) and has so structure until it’s displayed. Almost like how a 3D game – there are granular  resources which are rendered at run-time.</p>
<p>Also like a 3D game, if something is off-screen, it isn’t rendered. If something is in a different database, it isn’t accessed. So the app itself can be extremely lightweight and delivered in a ton of formats.</p>
<p>A table can quickly become a spreadsheet, or a kanban, or a wiki article. It’s just a different way of displaying the blocks.</p>
<p>In a hyperconverged world, the blocks aren’t even in the same database. They could be anywhere. They could be anything. They could have a CPU assigned to them– each cell in a spreadsheet running in a different data center.</p>
<p>This used to be insanely difficult, but now it’s not even <em>expensive</em>. Paperspace costs about 1/10th of a penny per minute, and that’s -marked up-.</p>
<p>By comparison, a MacBook Air costs about 6x as much, if you use it 8 hours a day, every day.</p>
<p>So now you can assign an entire computer to a single cell in a spreadsheet, and assign another computer to unify all of the calculations happening across the cells.</p>
<p>But no one is designing software like this currently.</p>
<p>It’s not hard to think of a different computer handling part of a task – xBox One supposedly had cloud rendering, but it didn’t do much.</p>
<p>Google Stadia runs games inside a hyper converged environment, but they’re all currently games designed to expect to be run on a single desktop.</p>
<p>The next wave in personal computing is going to come when we have 5G, because then we’ll know we can expect there to be fiber-speed connectivity under all conditions.</p>
<p>Then we’ll know that we can have any part of an application rendered anywhere. Instead of embedding gifs in a tweet,  you could embed a whole game. And it’ll take zero time to load.</p>
<p>Any machine learning application can have unlimited processing power to computer, because the results will be streamed from special purpose chips in the cloud.</p>
<p>Suddenly carrying around the fastest available processor in your pocket, only to have it be powered down 90% of the day, will seem obsurd.</p>
<p>Rather than push 5nm CPUs to the edge devices, it’ll make way more sense to fill semi trailers with them and leave them every few miles parked next to a fiber line and a power pole.</p>
<p>“Computers” will become just screens. There will be nothing to upgrade, except the modem. Your &ldquo;desktop&rdquo; will be a Chromecast-sized puck with a 5g SIM card.</p>
<p>Who will create the apps for this new future? No-code will be the only way to build, with entire apps abstracted into a single drag and drop bundle of code; the complexity of building apps will be so abstracted, developers will become simple assemblers.</p>
<p>All software will be manipulatable, and your OS will be a semi-intelligent assembler of these blocks – Siri &amp; shortcuts is a lot closer to the future than Xcode.</p>
<p>This isn’t even the future - this is all happening <em>right now</em> in enterprise. It’s a dam waiting to burst in the consumer space.</p>
<p>Right now we think of Google for search and g suite, but Stadia + Collab are their path to the future.</p>
<p>Stadia just exists to get people used to the idea; It’s a chrome cast with a controller. Soon they’ll do it via a Chromebook shape and no one will even realize.</p>
<p>What place does Microsoft hold in this future? They’ll provide the hypervisor, the IDE, and the compute, via Azure. You won’t know you’re buying from them but they’ll power everything you do.</p>
<p>Amazon will obviously benefit – most block-based software will un on AWS, whether anyone knows it as a consumer or not.</p>
<p>Facebook is already running in this mode internally, and their XR future can be seen in projects from FAIR – Detectron 2 in particular – where they’re looking into ways to hook block-based computer to real-world objects.</p>
<p>Apple is the wildcard here. They’ve never quite earned a reputation as being good at cloud compute. But they definitely have a reputation of seeing the future first – and creating the defining interface toward it.</p>
<p>People think of XR headsets as the next interface of computing, but more importantly it seems XR will be the stepping stone to a block-based software future. The glasses are just the gimmick to get you to stop expecting a glowing rectangle.</p>
<p>In Apple’s view of the future, computer will be tied to objects, but in a personal way – all personally identifiable compute will happen, encrypted, in your pocket, before an abstracted agent reaches out to a data center for more resources</p>
<p>In exactly the same way they anonymously follow drivers for just a single block (but never more than a block) for mapping, compute will happen in the same way. Each chunk of HCI processing will be encrypted, anonymous, unknown, except when displayed.</p>
<p>In the same way Catalyst brought small-screen compute to the desktop, eventually there’ll be a path for block-based to get to phones, from the glasses.</p>
<p>Less interesting to think about where this will all go – it’s clear and inevitable – but what are the PATHS to get there and how can we each contribute along the way? What can you build today to anticipate this tomorrow?</p>
</blockquote>
]]></description>
</item><item>
    <title>The Bomb Didn&#39;t Beat Japan (Link)</title>
    <link>https://techzerker.com/2020-06-07-japan-atomic-bomb/</link>
    <pubDate>Sun, 07 Jun 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/2020-06-07-japan-atomic-bomb/</guid>
    <description><![CDATA[<p>This story already circulated plenty in months past, but I decided to link it today after a good co-worker discussion on who writes history, and always being willing to learn facts. In our case, our discussion started with referring to <em>Hunting Hitler</em>, and understanding at the close of the war, people needed to hear <strong>we got him!</strong>, even if it wasn&rsquo;t accurate, and he was actively being searched for. The same goes for Japan in 1945, the American public, at least in the short term, needed to hear that the Atomic Bomb developed at great expense and sacrifice ended the war. This article is a great read to remind us all to read and analyze facts for ourselves, and remember who writes history.</p>
<blockquote>
<p><a href="https://foreignpolicy.com/2013/05/30/the-bomb-didnt-beat-japan-stalin-did/" target="_blank" rel="noopener noreffer">The Bomb Didn&rsquo;t Beat Japan … Stalin Did (Foreign Policy)</a></p>
</blockquote>
]]></description>
</item><item>
    <title>Arch Linux – Conflicting Files and the Arch Wiki</title>
    <link>https://techzerker.com/2020-04-24-arch-wiki-conflicts/</link>
    <pubDate>Fri, 24 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/2020-04-24-arch-wiki-conflicts/</guid>
    <description><![CDATA[<p>It is no secret that my favorite distro for Linux after much trial and error, landed on <a href="https://archlinux.org" target="_blank" rel="noopener noreffer">Arch Linux</a>.</p>
<p>I found I prefer the rolling release model vs major version upgrades and the AUR (Arch User Repository) is incredible for finding and installing packages. That being said, it&rsquo;s biggest win is the <a href="https://wiki.archlinux.org/" target="_blank" rel="noopener noreffer">Arch Wiki</a>. I find however, that no matter how often that is repeated in the Arch circles, you still find forums full of solutions that the Arch Wiki covers better, or even conflict the Wiki.</p>
<p>I wrote this today, because I saw that example again in searching, where probably due to some previous mistake, when I went to update my system today, I was getting a failure for a pair of conflicting packages, which prevents updating as part of Arch giving you a chance to make sure you know what your doing&hellip;</p>
<p>A search for <a href="https://duckduckgo.com/?q=arch&#43;pacman&#43;%2B&#43;conflicting&#43;files" target="_blank" rel="noopener noreffer"><em>Arch Pacman + Conflicting Files</em></a> returns all sorts of results, from various BBS Sites, Reddit, and Forums, with the Arch Wiki nestled tightly among them.</p>
<p>However, in a rather large number of the forums I took a quick browse at, were suggestions like: <code>pacman -Syuf</code> and <code>pacman -Suf</code>, among others, which most importantly are encouraging the <code>f</code> <em>force</em> flag. In some cases, other responses speak up right away much as I am, and suggest not taking that approach, as it&rsquo;s a very strong-handed and dangerous approach to updating an Arch system.</p>
<p>Sure enough, in a bunch of cases (not a scientific sampling), there are follow-up posts of panic stricken users, who range from <em>system won&rsquo;t boot</em> to <em>pacman is completely broken</em>, and other results. Where a quick search for this same problem to the Arch Wiki, leads you down the <em>Pacman</em> page to it&rsquo;s <a href="https://wiki.archlinux.org/index.php/Pacman#%22Failed_to_commit_transaction_%28conflicting_files%29%22_error" target="_blank" rel="noopener noreffer">troubleshooting section</a>.</p>
<p>The core solution detailed:</p>
<blockquote>
<p>This is happening because pacman has detected a file conflict, and by design, will not overwrite files for you. This is by design, not a flaw.</p>
<p>The problem is usually trivial to solve. A safe way is to first check if another package owns the file (<code>pacman -Qo /path/to/file</code>). If the file is owned by another package, file a bug report. If the file is not owned by another package, rename the file which &lsquo;exists in filesystem&rsquo; and re-issue the update command. If all goes well, the file may then be removed.</p>
</blockquote>
<p>Sure enough, in my case, I ran <code>pacman -Qo /usr/lib/thefileinquestion</code>, and it returned that no package owned that file. So following the wiki, I did a quick rename of that file (not delete, in case it does end up being needed!). I re-ran my update process, no conflicts, and everything appears to be working! Simple :)</p>
<p>In the case of Arch, when in doubt, <em>start</em> with the <a href="https://wiki.archlinux.org/" target="_blank" rel="noopener noreffer">Arch Wiki</a>, and then ask for elaborations on those solutions if they are not working, or not solving your problem, and you likely will save yourself a lot of headache!</p>
<p>I even went so far for a while, as to run one of my self-hosted servers on <a href="https://www.vultr.com/?ref=7975115" target="_blank" rel="noopener noreffer">Vultr</a> on Arch, given they allowed custom ISOs! It is not always the best solution for a server, depending on the applications running, but its worth evaluating, and again, it&rsquo;s hard to fault the documentation power of the Wiki.</p>]]></description>
</item><item>
    <title>Running i3 Desktop with WSL on Windows 10</title>
    <link>https://techzerker.com/2020-04-19-wsl-i3-windows/</link>
    <pubDate>Sun, 19 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://techzerker.com/2020-04-19-wsl-i3-windows/</guid>
    <description><![CDATA[<p>While all my personal systems are exclusively running Linux, as is the nature of working in most IT Support roles, the base of my shared company workstation in the office is <em>Windows 10</em>.</p>
<p>After a bunch of article reading, research and testing, this is a quick summary of what I use to have what has worked for me as a fully functioning <a href="https://i3wm.org/" target="_blank" rel="noopener noreffer">i3</a> graphical desktop, running via WSL (Windows Subsystem for Linux) on a functioning X-Server. For me at least, I&rsquo;ve found it works much better than when I tried to have a VM running on the workstation, as it&rsquo;s far from new or high performance.</p>
<p>I won&rsquo;t re-hash instructions that are widely available for getting the base WSL system installed and running, as it&rsquo;s pretty straight forward to get WSL feature enabled, and then go through the process to in my case, setup the Ubuntu WSL version straight from the Windows Store.</p>
<p>Once you have that up and running, so that you can get to your basic WSL command prompt&hellip;</p>
<p></p>
<p>Obviously in my example, I&rsquo;ve added a few things to my <em>.bashrc</em>, and in windows I&rsquo;ve told it to let this window be a bit transparent.</p>
<p>Next up, you need a functioning X Server on windows that we can use to create the display. I tried a few, but in the end had the best luck with <a href="https://sourceforge.net/projects/vcxsrv/" target="_blank" rel="noopener noreffer">VcXsrv</a>, which you can download from that link at <em>SourceForge</em>. No special instructions needed beyond getting it installed, ideally in the default paths.</p>
<p>Once that is installed, you can also go ahead and install your DE (Desktop Environment) in your WSL install. In my case, because it&rsquo;s my preference and it&rsquo;s light weight, I stuck with <strong>i3</strong>, so that&rsquo;s what I&rsquo;ve tested here. That means your mileage may vary with other DE&rsquo;s. No special considerations for the install, in this case it was a standard <code>apt install i3</code> on a fully updated system.</p>
<p>Now comes the fun part of pulling it all together, these scripts are dirty and simple, I guarantee someone could write them to be cleaner or better looking, but they were written just for myself originally to this end. On my desktop I have:</p>
<p><strong>wsl.vbs</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&#39; This script is meant to be launched from the Windows side, to start up a decorationless
&#39; VcXsrv container for the environment.
&#39;
&#39; You may need to change this to reflect your VcXsrv install path as well as screen resolution.
&#39; Then after the VcXsrv container is running, it pulls the WSL Ubuntu into it, along with a launch script.

Set shell = CreateObject(&#34;WScript.Shell&#34; ) 
shell.Run &#34;&#34;&#34;C:\Program Files\VcXsrv\vcxsrv.exe&#34;&#34; :0 -screen 0 @1 -ac +xinerama -engine 1 -nodecoration -wgl&#34;
WScript.Sleep 200
shell.Run &#34;ubuntu -c &#34;&#34;~/.scripts/wlaunch&#34;&#34;&#34;, 0
</code></pre></td></tr></table>
</div>
</div><p>Following that, before this actually works, as you can see, inside my WSL Ubuntu home directory, I&rsquo;m calling a script called <em>wlaunch</em>:</p>
<p><strong>wlaunch</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
<span class="c1"># meant to be run with `bash -c &#34;/path/to/wlaunch&#34;` when running from e.g. a Windows shortcut</span>

<span class="c1"># explicitly needed when launching with bash -c from Windows</span>
<span class="nb">source</span> ~/.bashrc
<span class="nb">export</span> <span class="nv">DISPLAY</span><span class="o">=</span>:0
i3
</code></pre></td></tr></table>
</div>
</div><p>Obviously, replace the last line calling i3 with something else if you are using a different environment, like XFCE, which I have not tested.</p>
<p>When that&rsquo;s all in place, all things being equal, you should be able to run <em>wsl.vbs</em>, and after a few seconds, be staring at your desktop environment! In my case, because its i3, I have beyond that heavily setup my own i3 config files, polybar, etc. for the look I want:</p>
<p></p>
<p>After more than a year of this setup, I have yet to have any issues with any program. I&rsquo;ve run things like Sublime Text, Firefox and Spacemacs all within this desktop environment without any issues, and with way better performance than I had on a VM. For easy workflow between the base Windows 10 system and this WSL i3, I&rsquo;ve simply created symlinks for my core folders like <em>Documents</em> and my mapped network drive, given all drives in WSL1 are available at <strong>/mnt/driveletter</strong></p>
<p>Hopefully this article was helpful to those that need it, it&rsquo;s certainly made my day to day usage on a Windows 10 machine be that much less&hellip;well&hellip;Windows!</p>
<p>If this article was helpful, and you&rsquo;re looking for more tools to help you work from home, even if you have to use Windows 10, why not check out <a href="https://www.humblebundle.com/software/work-remote-software?partner=techzerker" target="_blank" rel="noopener noreffer">Humble Bundles <em>Remote Work</em> Bundle</a>, or take the rest of the day off, and catch up on some <a href="https://www.humblebundle.com/software/work-remote-software?partner=techzerker" target="_blank" rel="noopener noreffer">Warhammer 40k Black Library</a> reading.</p>]]></description>
</item></channel>
</rss>
